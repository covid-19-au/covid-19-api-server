syntax = "proto3";

package covid19api;

option go_package = ".;covid19api";
option java_multiple_files = true;
option java_outer_classname = "CaseInterfaceProto";
option java_package = "org.covid19.api";

import "github.com/mwitkow/go-proto-validators/validator.proto";

import "common.proto";
import "geo.def.proto";

// CaseState describes state of the case
enum CaseState {
    _UNASSIGNED_CASE_STATE = 0; // unknown value will be replaced with this value

    UNKNOWN = 11;
    UNDISCLOSED = 12;

    CONFIRMED = 21;
    RECOVERED = 22;
    DEATH = 23;
}

// InfectionSource describes source of the infection
enum InfectionSource {
    _UNASSIGNED_INF_SRC = 0; // unknown value will be replaced with this value

    DOMESTIC = 1;
    INTL_IMPORTED = 2;
    SHIP_IMPORTED = 3;
}

// ExistingCaseDetail describes an existing (exists in DB) case
message ExistingCaseDetail {
    string case_id = 1 [(validator.field) = {string_not_empty: true}]; // Case IDs to be referenced internally
    string patient_id = 2; // Anonymous patient identifier
    int64 reported_time = 3 [(validator.field) = {int_gt: 0}]; // Reported timestamp

    CaseState state = 11 [(validator.field) = {is_in_enum: true, msg_exists: true}]; // Case state
    InfectionSource infect_src = 12 [(validator.field) = {is_in_enum: true, int_gt: 0, msg_exists: true}]; // Source of infection

    Location location = 21 [(validator.field) = {msg_exists: true}];
}

// NewCaseDetail describes a new (not exists in DB) case
message NewCaseDetail {
    string patient_id = 2; // Anonymous patient identifier
    int64 reported_time = 3 [(validator.field) = {int_gt: 0}]; // Reported timestamp

    CaseState state = 11 [(validator.field) = {is_in_enum: true, msg_exists: true}]; // Case state
    InfectionSource infect_src = 12 [(validator.field) = {is_in_enum: true, int_gt: 0, msg_exists: true}]; // Source of infection

    Location location = 21 [(validator.field) = {msg_exists: true}];
}

// GetCasesRequest describes request payload for querying cases match specific criteria
message GetCasesRequest {
    Location location = 1;

    repeated CaseState states = 11 [(validator.field) = {repeated_count_min : 1}]; // Case states

    int64 start_time = 21 [(validator.field) = {int_gt: 0}]; // Start Unix timestamp
    int64 end_time = 22 [(validator.field) = {int_gt: 0}]; // End Unix timestamp
}

// GetCasesResponse describes response payload for matched cases
message GetCasesResponse {
    Pagination pagination = 1;

    repeated ExistingCaseDetail cases = 11;
}

message GetCaseStatsRequest {
    bool no_cache = 1;
}

message GetCaseStatsResponse {
    int64 last_upd_time = 1;

    int64 confirmed_count = 11;
    int64 confirmed_diff_yesterday = 12;

    int64 deaths_count = 21;
    int64 deaths_diff_yesterday = 22;

    int64 recovered_count = 31;
    int64 recovered_diff_yesterday = 32;

    int64 tested_count = 41;
    int64 tested_diff_yesterday = 42;

    int64 in_hospital_count = 51;
    int64 in_hospital_diff_yesterday = 52;

    int64 in_icu_count = 61;
    int64 in_icu_diff_yesterday = 62;
}

// AddCasesRequest describes request payload for adding cases
message AddCasesRequest {
    repeated NewCaseDetail cases = 1 [(validator.field) = {repeated_count_min : 1}];
}

// PutCasesRequest describes request payload for updating existing cases
message PutCasesRequest {
    repeated ExistingCaseDetail cases = 1 [(validator.field) = {repeated_count_min : 1}];
}

// DelCasesRequest describes request payload for deleting existing cases
message DelCasesRequest {
    repeated string case_ids = 1 [(validator.field) = {repeated_count_min : 1}];
}
