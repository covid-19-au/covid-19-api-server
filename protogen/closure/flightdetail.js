// source: flight.def.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

goog.provide('proto.covid19api.FlightDetail');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.covid19api.FlightDetail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.covid19api.FlightDetail.repeatedFields_, null);
};
goog.inherits(proto.covid19api.FlightDetail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.covid19api.FlightDetail.displayName = 'proto.covid19api.FlightDetail';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.covid19api.FlightDetail.repeatedFields_ = [21];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.covid19api.FlightDetail.prototype.toObject = function(opt_includeInstance) {
  return proto.covid19api.FlightDetail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.covid19api.FlightDetail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.covid19api.FlightDetail.toObject = function(includeInstance, msg) {
  var f, obj = {
    flightNum: jspb.Message.getFieldWithDefault(msg, 1, ""),
    iataCode: jspb.Message.getFieldWithDefault(msg, 2, ""),
    icaoCode: jspb.Message.getFieldWithDefault(msg, 3, ""),
    depDate: jspb.Message.getFieldWithDefault(msg, 4, 0),
    arrDate: jspb.Message.getFieldWithDefault(msg, 5, 0),
    depAirport: jspb.Message.getFieldWithDefault(msg, 11, ""),
    arrAirport: jspb.Message.getFieldWithDefault(msg, 12, ""),
    affectedRowsList: (f = jspb.Message.getRepeatedField(msg, 21)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.covid19api.FlightDetail}
 */
proto.covid19api.FlightDetail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.covid19api.FlightDetail;
  return proto.covid19api.FlightDetail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.covid19api.FlightDetail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.covid19api.FlightDetail}
 */
proto.covid19api.FlightDetail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFlightNum(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setIataCode(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setIcaoCode(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDepDate(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setArrDate(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setDepAirport(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setArrAirport(value);
      break;
    case 21:
      var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
      msg.setAffectedRowsList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.covid19api.FlightDetail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.covid19api.FlightDetail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.covid19api.FlightDetail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.covid19api.FlightDetail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFlightNum();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIataCode();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getIcaoCode();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDepDate();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getArrDate();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getDepAirport();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getArrAirport();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getAffectedRowsList();
  if (f.length > 0) {
    writer.writePackedUint32(
      21,
      f
    );
  }
};


/**
 * optional string flight_num = 1;
 * @return {string}
 */
proto.covid19api.FlightDetail.prototype.getFlightNum = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.covid19api.FlightDetail} returns this
 */
proto.covid19api.FlightDetail.prototype.setFlightNum = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string iata_code = 2;
 * @return {string}
 */
proto.covid19api.FlightDetail.prototype.getIataCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.covid19api.FlightDetail} returns this
 */
proto.covid19api.FlightDetail.prototype.setIataCode = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string icao_code = 3;
 * @return {string}
 */
proto.covid19api.FlightDetail.prototype.getIcaoCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.covid19api.FlightDetail} returns this
 */
proto.covid19api.FlightDetail.prototype.setIcaoCode = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int64 dep_date = 4;
 * @return {number}
 */
proto.covid19api.FlightDetail.prototype.getDepDate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.covid19api.FlightDetail} returns this
 */
proto.covid19api.FlightDetail.prototype.setDepDate = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 arr_date = 5;
 * @return {number}
 */
proto.covid19api.FlightDetail.prototype.getArrDate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.covid19api.FlightDetail} returns this
 */
proto.covid19api.FlightDetail.prototype.setArrDate = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string dep_airport = 11;
 * @return {string}
 */
proto.covid19api.FlightDetail.prototype.getDepAirport = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.covid19api.FlightDetail} returns this
 */
proto.covid19api.FlightDetail.prototype.setDepAirport = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string arr_airport = 12;
 * @return {string}
 */
proto.covid19api.FlightDetail.prototype.getArrAirport = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.covid19api.FlightDetail} returns this
 */
proto.covid19api.FlightDetail.prototype.setArrAirport = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * repeated uint32 affected_rows = 21;
 * @return {!Array<number>}
 */
proto.covid19api.FlightDetail.prototype.getAffectedRowsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 21));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.covid19api.FlightDetail} returns this
 */
proto.covid19api.FlightDetail.prototype.setAffectedRowsList = function(value) {
  return jspb.Message.setField(this, 21, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.covid19api.FlightDetail} returns this
 */
proto.covid19api.FlightDetail.prototype.addAffectedRows = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 21, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.covid19api.FlightDetail} returns this
 */
proto.covid19api.FlightDetail.prototype.clearAffectedRowsList = function() {
  return this.setAffectedRowsList([]);
};


