// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: case.def.proto

package covid19api

import (
	fmt "fmt"
	math "math"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/golang/protobuf/ptypes/timestamp"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *ExistingCaseDetail) Validate() error {
	if this.ReportedTime != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.ReportedTime); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("ReportedTime", err)
		}
	}
	if oneOfNester, ok := this.GetLocation().(*ExistingCaseDetail_NamedLocation); ok {
		if oneOfNester.NamedLocation != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.NamedLocation); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("NamedLocation", err)
			}
		}
	}
	if oneOfNester, ok := this.GetLocation().(*ExistingCaseDetail_GpsLocation); ok {
		if oneOfNester.GpsLocation != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.GpsLocation); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("GpsLocation", err)
			}
		}
	}
	return nil
}
func (this *NewCaseDetail) Validate() error {
	if this.ReportedTime != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.ReportedTime); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("ReportedTime", err)
		}
	}
	if oneOfNester, ok := this.GetLocation().(*NewCaseDetail_NamedLocation); ok {
		if oneOfNester.NamedLocation != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.NamedLocation); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("NamedLocation", err)
			}
		}
	}
	if oneOfNester, ok := this.GetLocation().(*NewCaseDetail_GpsLocation); ok {
		if oneOfNester.GpsLocation != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.GpsLocation); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("GpsLocation", err)
			}
		}
	}
	return nil
}
func (this *GetCasesRequest) Validate() error {
	if oneOfNester, ok := this.GetLocation().(*GetCasesRequest_NamedLocation); ok {
		if oneOfNester.NamedLocation != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.NamedLocation); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("NamedLocation", err)
			}
		}
	}
	if oneOfNester, ok := this.GetLocation().(*GetCasesRequest_GpsLocation); ok {
		if oneOfNester.GpsLocation != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.GpsLocation); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("GpsLocation", err)
			}
		}
	}
	if this.StartTime != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.StartTime); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("StartTime", err)
		}
	}
	if this.EndTime != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.EndTime); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("EndTime", err)
		}
	}
	return nil
}
func (this *GetCasesResponse) Validate() error {
	if this.Pagination != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Pagination); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Pagination", err)
		}
	}
	for _, item := range this.Cases {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Cases", err)
			}
		}
	}
	return nil
}
func (this *AddCasesRequest) Validate() error {
	for _, item := range this.Cases {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Cases", err)
			}
		}
	}
	return nil
}
func (this *PutCasesRequest) Validate() error {
	for _, item := range this.Cases {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Cases", err)
			}
		}
	}
	return nil
}
func (this *DelCasesRequest) Validate() error {
	return nil
}
