// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0-devel
// 	protoc        v3.11.4
// source: admin.svc.proto

package covid19api

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

var File_admin_svc_proto protoreflect.FileDescriptor

var file_admin_svc_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0a, 0x63, 0x6f, 0x76, 0x69, 0x64, 0x31, 0x39, 0x61, 0x70, 0x69, 0x1a, 0x1b, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65,
	0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70,
	0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0e, 0x63, 0x61, 0x73, 0x65,
	0x2e, 0x64, 0x65, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x66, 0x6c, 0x69, 0x67,
	0x68, 0x74, 0x2e, 0x64, 0x65, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x32, 0xbe, 0x03, 0x0a,
	0x09, 0x44, 0x61, 0x74, 0x61, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x46, 0x0a, 0x0e, 0x49, 0x73,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x61, 0x64, 0x79, 0x12, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x00, 0x12, 0x45, 0x0a, 0x08, 0x41, 0x64, 0x64, 0x43, 0x61, 0x73, 0x65, 0x73, 0x12, 0x1b,
	0x2e, 0x63, 0x6f, 0x76, 0x69, 0x64, 0x31, 0x39, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x64, 0x64, 0x43,
	0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f,
	0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x08, 0x50, 0x75, 0x74,
	0x43, 0x61, 0x73, 0x65, 0x73, 0x12, 0x1b, 0x2e, 0x63, 0x6f, 0x76, 0x69, 0x64, 0x31, 0x39, 0x61,
	0x70, 0x69, 0x2e, 0x50, 0x75, 0x74, 0x43, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x00,
	0x12, 0x45, 0x0a, 0x08, 0x44, 0x65, 0x6c, 0x43, 0x61, 0x73, 0x65, 0x73, 0x12, 0x1b, 0x2e, 0x63,
	0x6f, 0x76, 0x69, 0x64, 0x31, 0x39, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x6c, 0x43, 0x61, 0x73,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x46, 0x6c,
	0x69, 0x67, 0x68, 0x74, 0x73, 0x12, 0x1d, 0x2e, 0x63, 0x6f, 0x76, 0x69, 0x64, 0x31, 0x39, 0x61,
	0x70, 0x69, 0x2e, 0x41, 0x64, 0x64, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x00, 0x12, 0x49, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x73,
	0x12, 0x1d, 0x2e, 0x63, 0x6f, 0x76, 0x69, 0x64, 0x31, 0x39, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65,
	0x6c, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x00, 0x42, 0x31, 0x0a,
	0x0f, 0x6f, 0x72, 0x67, 0x2e, 0x63, 0x6f, 0x76, 0x69, 0x64, 0x31, 0x39, 0x2e, 0x61, 0x70, 0x69,
	0x42, 0x0e, 0x44, 0x61, 0x74, 0x61, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x50, 0x01, 0x5a, 0x0c, 0x2e, 0x3b, 0x63, 0x6f, 0x76, 0x69, 0x64, 0x31, 0x39, 0x61, 0x70, 0x69,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var file_admin_svc_proto_goTypes = []interface{}{
	(*empty.Empty)(nil),        // 0: google.protobuf.Empty
	(*AddCasesRequest)(nil),    // 1: covid19api.AddCasesRequest
	(*PutCasesRequest)(nil),    // 2: covid19api.PutCasesRequest
	(*DelCasesRequest)(nil),    // 3: covid19api.DelCasesRequest
	(*AddFlightsRequest)(nil),  // 4: covid19api.AddFlightsRequest
	(*DelFlightsRequest)(nil),  // 5: covid19api.DelFlightsRequest
	(*wrappers.BoolValue)(nil), // 6: google.protobuf.BoolValue
}
var file_admin_svc_proto_depIdxs = []int32{
	0, // 0: covid19api.DataAdmin.IsServiceReady:input_type -> google.protobuf.Empty
	1, // 1: covid19api.DataAdmin.AddCases:input_type -> covid19api.AddCasesRequest
	2, // 2: covid19api.DataAdmin.PutCases:input_type -> covid19api.PutCasesRequest
	3, // 3: covid19api.DataAdmin.DelCases:input_type -> covid19api.DelCasesRequest
	4, // 4: covid19api.DataAdmin.AddFlights:input_type -> covid19api.AddFlightsRequest
	5, // 5: covid19api.DataAdmin.DelFlights:input_type -> covid19api.DelFlightsRequest
	6, // 6: covid19api.DataAdmin.IsServiceReady:output_type -> google.protobuf.BoolValue
	6, // 7: covid19api.DataAdmin.AddCases:output_type -> google.protobuf.BoolValue
	6, // 8: covid19api.DataAdmin.PutCases:output_type -> google.protobuf.BoolValue
	6, // 9: covid19api.DataAdmin.DelCases:output_type -> google.protobuf.BoolValue
	6, // 10: covid19api.DataAdmin.AddFlights:output_type -> google.protobuf.BoolValue
	6, // 11: covid19api.DataAdmin.DelFlights:output_type -> google.protobuf.BoolValue
	6, // [6:12] is the sub-list for method output_type
	0, // [0:6] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_admin_svc_proto_init() }
func file_admin_svc_proto_init() {
	if File_admin_svc_proto != nil {
		return
	}
	file_case_def_proto_init()
	file_flight_def_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_admin_svc_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_admin_svc_proto_goTypes,
		DependencyIndexes: file_admin_svc_proto_depIdxs,
	}.Build()
	File_admin_svc_proto = out.File
	file_admin_svc_proto_rawDesc = nil
	file_admin_svc_proto_goTypes = nil
	file_admin_svc_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DataAdminClient is the client API for DataAdmin service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DataAdminClient interface {
	IsServiceReady(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*wrappers.BoolValue, error)
	AddCases(ctx context.Context, in *AddCasesRequest, opts ...grpc.CallOption) (*wrappers.BoolValue, error)
	PutCases(ctx context.Context, in *PutCasesRequest, opts ...grpc.CallOption) (*wrappers.BoolValue, error)
	DelCases(ctx context.Context, in *DelCasesRequest, opts ...grpc.CallOption) (*wrappers.BoolValue, error)
	AddFlights(ctx context.Context, in *AddFlightsRequest, opts ...grpc.CallOption) (*wrappers.BoolValue, error)
	DelFlights(ctx context.Context, in *DelFlightsRequest, opts ...grpc.CallOption) (*wrappers.BoolValue, error)
}

type dataAdminClient struct {
	cc grpc.ClientConnInterface
}

func NewDataAdminClient(cc grpc.ClientConnInterface) DataAdminClient {
	return &dataAdminClient{cc}
}

func (c *dataAdminClient) IsServiceReady(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*wrappers.BoolValue, error) {
	out := new(wrappers.BoolValue)
	err := c.cc.Invoke(ctx, "/covid19api.DataAdmin/IsServiceReady", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataAdminClient) AddCases(ctx context.Context, in *AddCasesRequest, opts ...grpc.CallOption) (*wrappers.BoolValue, error) {
	out := new(wrappers.BoolValue)
	err := c.cc.Invoke(ctx, "/covid19api.DataAdmin/AddCases", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataAdminClient) PutCases(ctx context.Context, in *PutCasesRequest, opts ...grpc.CallOption) (*wrappers.BoolValue, error) {
	out := new(wrappers.BoolValue)
	err := c.cc.Invoke(ctx, "/covid19api.DataAdmin/PutCases", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataAdminClient) DelCases(ctx context.Context, in *DelCasesRequest, opts ...grpc.CallOption) (*wrappers.BoolValue, error) {
	out := new(wrappers.BoolValue)
	err := c.cc.Invoke(ctx, "/covid19api.DataAdmin/DelCases", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataAdminClient) AddFlights(ctx context.Context, in *AddFlightsRequest, opts ...grpc.CallOption) (*wrappers.BoolValue, error) {
	out := new(wrappers.BoolValue)
	err := c.cc.Invoke(ctx, "/covid19api.DataAdmin/AddFlights", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataAdminClient) DelFlights(ctx context.Context, in *DelFlightsRequest, opts ...grpc.CallOption) (*wrappers.BoolValue, error) {
	out := new(wrappers.BoolValue)
	err := c.cc.Invoke(ctx, "/covid19api.DataAdmin/DelFlights", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DataAdminServer is the server API for DataAdmin service.
type DataAdminServer interface {
	IsServiceReady(context.Context, *empty.Empty) (*wrappers.BoolValue, error)
	AddCases(context.Context, *AddCasesRequest) (*wrappers.BoolValue, error)
	PutCases(context.Context, *PutCasesRequest) (*wrappers.BoolValue, error)
	DelCases(context.Context, *DelCasesRequest) (*wrappers.BoolValue, error)
	AddFlights(context.Context, *AddFlightsRequest) (*wrappers.BoolValue, error)
	DelFlights(context.Context, *DelFlightsRequest) (*wrappers.BoolValue, error)
}

// UnimplementedDataAdminServer can be embedded to have forward compatible implementations.
type UnimplementedDataAdminServer struct {
}

func (*UnimplementedDataAdminServer) IsServiceReady(context.Context, *empty.Empty) (*wrappers.BoolValue, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IsServiceReady not implemented")
}
func (*UnimplementedDataAdminServer) AddCases(context.Context, *AddCasesRequest) (*wrappers.BoolValue, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddCases not implemented")
}
func (*UnimplementedDataAdminServer) PutCases(context.Context, *PutCasesRequest) (*wrappers.BoolValue, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PutCases not implemented")
}
func (*UnimplementedDataAdminServer) DelCases(context.Context, *DelCasesRequest) (*wrappers.BoolValue, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DelCases not implemented")
}
func (*UnimplementedDataAdminServer) AddFlights(context.Context, *AddFlightsRequest) (*wrappers.BoolValue, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddFlights not implemented")
}
func (*UnimplementedDataAdminServer) DelFlights(context.Context, *DelFlightsRequest) (*wrappers.BoolValue, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DelFlights not implemented")
}

func RegisterDataAdminServer(s *grpc.Server, srv DataAdminServer) {
	s.RegisterService(&_DataAdmin_serviceDesc, srv)
}

func _DataAdmin_IsServiceReady_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataAdminServer).IsServiceReady(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/covid19api.DataAdmin/IsServiceReady",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataAdminServer).IsServiceReady(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataAdmin_AddCases_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddCasesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataAdminServer).AddCases(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/covid19api.DataAdmin/AddCases",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataAdminServer).AddCases(ctx, req.(*AddCasesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataAdmin_PutCases_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutCasesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataAdminServer).PutCases(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/covid19api.DataAdmin/PutCases",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataAdminServer).PutCases(ctx, req.(*PutCasesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataAdmin_DelCases_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DelCasesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataAdminServer).DelCases(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/covid19api.DataAdmin/DelCases",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataAdminServer).DelCases(ctx, req.(*DelCasesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataAdmin_AddFlights_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddFlightsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataAdminServer).AddFlights(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/covid19api.DataAdmin/AddFlights",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataAdminServer).AddFlights(ctx, req.(*AddFlightsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataAdmin_DelFlights_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DelFlightsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataAdminServer).DelFlights(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/covid19api.DataAdmin/DelFlights",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataAdminServer).DelFlights(ctx, req.(*DelFlightsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DataAdmin_serviceDesc = grpc.ServiceDesc{
	ServiceName: "covid19api.DataAdmin",
	HandlerType: (*DataAdminServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "IsServiceReady",
			Handler:    _DataAdmin_IsServiceReady_Handler,
		},
		{
			MethodName: "AddCases",
			Handler:    _DataAdmin_AddCases_Handler,
		},
		{
			MethodName: "PutCases",
			Handler:    _DataAdmin_PutCases_Handler,
		},
		{
			MethodName: "DelCases",
			Handler:    _DataAdmin_DelCases_Handler,
		},
		{
			MethodName: "AddFlights",
			Handler:    _DataAdmin_AddFlights_Handler,
		},
		{
			MethodName: "DelFlights",
			Handler:    _DataAdmin_DelFlights_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "admin.svc.proto",
}
