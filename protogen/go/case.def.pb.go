// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0-devel
// 	protoc        v3.11.4
// source: case.def.proto

package covid19api

import (
	proto "github.com/golang/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// CaseState describes state of the case
type CaseState int32

const (
	CaseState__UNASSIGNED_CASE_STATE CaseState = 0 // unknown value will be replaced with this value
	CaseState_UNKNOWN                CaseState = 11
	CaseState_UNDISCLOSED            CaseState = 12
	CaseState_CONFIRMED              CaseState = 21
	CaseState_RECOVERED              CaseState = 22
	CaseState_DEATH                  CaseState = 23
)

// Enum value maps for CaseState.
var (
	CaseState_name = map[int32]string{
		0:  "_UNASSIGNED_CASE_STATE",
		11: "UNKNOWN",
		12: "UNDISCLOSED",
		21: "CONFIRMED",
		22: "RECOVERED",
		23: "DEATH",
	}
	CaseState_value = map[string]int32{
		"_UNASSIGNED_CASE_STATE": 0,
		"UNKNOWN":                11,
		"UNDISCLOSED":            12,
		"CONFIRMED":              21,
		"RECOVERED":              22,
		"DEATH":                  23,
	}
)

func (x CaseState) Enum() *CaseState {
	p := new(CaseState)
	*p = x
	return p
}

func (x CaseState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CaseState) Descriptor() protoreflect.EnumDescriptor {
	return file_case_def_proto_enumTypes[0].Descriptor()
}

func (CaseState) Type() protoreflect.EnumType {
	return &file_case_def_proto_enumTypes[0]
}

func (x CaseState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CaseState.Descriptor instead.
func (CaseState) EnumDescriptor() ([]byte, []int) {
	return file_case_def_proto_rawDescGZIP(), []int{0}
}

// InfectionSource describes source of the infection
type InfectionSource int32

const (
	InfectionSource__UNASSIGNED_INF_SRC InfectionSource = 0 // unknown value will be replaced with this value
	InfectionSource_DOMESTIC            InfectionSource = 1
	InfectionSource_INTL_IMPORTED       InfectionSource = 2
	InfectionSource_SHIP_IMPORTED       InfectionSource = 3
)

// Enum value maps for InfectionSource.
var (
	InfectionSource_name = map[int32]string{
		0: "_UNASSIGNED_INF_SRC",
		1: "DOMESTIC",
		2: "INTL_IMPORTED",
		3: "SHIP_IMPORTED",
	}
	InfectionSource_value = map[string]int32{
		"_UNASSIGNED_INF_SRC": 0,
		"DOMESTIC":            1,
		"INTL_IMPORTED":       2,
		"SHIP_IMPORTED":       3,
	}
)

func (x InfectionSource) Enum() *InfectionSource {
	p := new(InfectionSource)
	*p = x
	return p
}

func (x InfectionSource) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InfectionSource) Descriptor() protoreflect.EnumDescriptor {
	return file_case_def_proto_enumTypes[1].Descriptor()
}

func (InfectionSource) Type() protoreflect.EnumType {
	return &file_case_def_proto_enumTypes[1]
}

func (x InfectionSource) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InfectionSource.Descriptor instead.
func (InfectionSource) EnumDescriptor() ([]byte, []int) {
	return file_case_def_proto_rawDescGZIP(), []int{1}
}

// ExistingCaseDetail describes an existing (exists in DB) case
type ExistingCaseDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CaseId       string          `protobuf:"bytes,1,opt,name=case_id,json=caseId,proto3" json:"case_id,omitempty"`                                            // Case IDs to be referenced internally
	PatientId    string          `protobuf:"bytes,2,opt,name=patient_id,json=patientId,proto3" json:"patient_id,omitempty"`                                   // Anonymous patient identifier
	ReportedTime int64           `protobuf:"varint,3,opt,name=reported_time,json=reportedTime,proto3" json:"reported_time,omitempty"`                         // Reported timestamp
	State        CaseState       `protobuf:"varint,11,opt,name=state,proto3,enum=covid19api.CaseState" json:"state,omitempty"`                                // Case state
	InfectSrc    InfectionSource `protobuf:"varint,12,opt,name=infect_src,json=infectSrc,proto3,enum=covid19api.InfectionSource" json:"infect_src,omitempty"` // Source of infection
	Location     *Location       `protobuf:"bytes,21,opt,name=location,proto3" json:"location,omitempty"`
}

func (x *ExistingCaseDetail) Reset() {
	*x = ExistingCaseDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_case_def_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistingCaseDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistingCaseDetail) ProtoMessage() {}

func (x *ExistingCaseDetail) ProtoReflect() protoreflect.Message {
	mi := &file_case_def_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistingCaseDetail.ProtoReflect.Descriptor instead.
func (*ExistingCaseDetail) Descriptor() ([]byte, []int) {
	return file_case_def_proto_rawDescGZIP(), []int{0}
}

func (x *ExistingCaseDetail) GetCaseId() string {
	if x != nil {
		return x.CaseId
	}
	return ""
}

func (x *ExistingCaseDetail) GetPatientId() string {
	if x != nil {
		return x.PatientId
	}
	return ""
}

func (x *ExistingCaseDetail) GetReportedTime() int64 {
	if x != nil {
		return x.ReportedTime
	}
	return 0
}

func (x *ExistingCaseDetail) GetState() CaseState {
	if x != nil {
		return x.State
	}
	return CaseState__UNASSIGNED_CASE_STATE
}

func (x *ExistingCaseDetail) GetInfectSrc() InfectionSource {
	if x != nil {
		return x.InfectSrc
	}
	return InfectionSource__UNASSIGNED_INF_SRC
}

func (x *ExistingCaseDetail) GetLocation() *Location {
	if x != nil {
		return x.Location
	}
	return nil
}

// NewCaseDetail describes a new (not exists in DB) case
type NewCaseDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PatientId    string          `protobuf:"bytes,2,opt,name=patient_id,json=patientId,proto3" json:"patient_id,omitempty"`                                   // Anonymous patient identifier
	ReportedTime int64           `protobuf:"varint,3,opt,name=reported_time,json=reportedTime,proto3" json:"reported_time,omitempty"`                         // Reported timestamp
	State        CaseState       `protobuf:"varint,11,opt,name=state,proto3,enum=covid19api.CaseState" json:"state,omitempty"`                                // Case state
	InfectSrc    InfectionSource `protobuf:"varint,12,opt,name=infect_src,json=infectSrc,proto3,enum=covid19api.InfectionSource" json:"infect_src,omitempty"` // Source of infection
	Location     *Location       `protobuf:"bytes,21,opt,name=location,proto3" json:"location,omitempty"`
}

func (x *NewCaseDetail) Reset() {
	*x = NewCaseDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_case_def_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewCaseDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewCaseDetail) ProtoMessage() {}

func (x *NewCaseDetail) ProtoReflect() protoreflect.Message {
	mi := &file_case_def_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewCaseDetail.ProtoReflect.Descriptor instead.
func (*NewCaseDetail) Descriptor() ([]byte, []int) {
	return file_case_def_proto_rawDescGZIP(), []int{1}
}

func (x *NewCaseDetail) GetPatientId() string {
	if x != nil {
		return x.PatientId
	}
	return ""
}

func (x *NewCaseDetail) GetReportedTime() int64 {
	if x != nil {
		return x.ReportedTime
	}
	return 0
}

func (x *NewCaseDetail) GetState() CaseState {
	if x != nil {
		return x.State
	}
	return CaseState__UNASSIGNED_CASE_STATE
}

func (x *NewCaseDetail) GetInfectSrc() InfectionSource {
	if x != nil {
		return x.InfectSrc
	}
	return InfectionSource__UNASSIGNED_INF_SRC
}

func (x *NewCaseDetail) GetLocation() *Location {
	if x != nil {
		return x.Location
	}
	return nil
}

// GetCasesRequest describes request payload for querying cases match specific criteria
type GetCasesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location  *Location   `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
	States    []CaseState `protobuf:"varint,11,rep,packed,name=states,proto3,enum=covid19api.CaseState" json:"states,omitempty"` // Case states
	StartTime int64       `protobuf:"varint,21,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`           // Start Unix timestamp
	EndTime   int64       `protobuf:"varint,22,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`                 // End Unix timestamp
}

func (x *GetCasesRequest) Reset() {
	*x = GetCasesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_case_def_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCasesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCasesRequest) ProtoMessage() {}

func (x *GetCasesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_case_def_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCasesRequest.ProtoReflect.Descriptor instead.
func (*GetCasesRequest) Descriptor() ([]byte, []int) {
	return file_case_def_proto_rawDescGZIP(), []int{2}
}

func (x *GetCasesRequest) GetLocation() *Location {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *GetCasesRequest) GetStates() []CaseState {
	if x != nil {
		return x.States
	}
	return nil
}

func (x *GetCasesRequest) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *GetCasesRequest) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

// GetCasesResponse describes response payload for matched cases
type GetCasesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagination *Pagination           `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Cases      []*ExistingCaseDetail `protobuf:"bytes,11,rep,name=cases,proto3" json:"cases,omitempty"`
}

func (x *GetCasesResponse) Reset() {
	*x = GetCasesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_case_def_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCasesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCasesResponse) ProtoMessage() {}

func (x *GetCasesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_case_def_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCasesResponse.ProtoReflect.Descriptor instead.
func (*GetCasesResponse) Descriptor() ([]byte, []int) {
	return file_case_def_proto_rawDescGZIP(), []int{3}
}

func (x *GetCasesResponse) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetCasesResponse) GetCases() []*ExistingCaseDetail {
	if x != nil {
		return x.Cases
	}
	return nil
}

type GetCaseStatsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NoCache bool `protobuf:"varint,1,opt,name=no_cache,json=noCache,proto3" json:"no_cache,omitempty"`
}

func (x *GetCaseStatsRequest) Reset() {
	*x = GetCaseStatsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_case_def_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCaseStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCaseStatsRequest) ProtoMessage() {}

func (x *GetCaseStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_case_def_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCaseStatsRequest.ProtoReflect.Descriptor instead.
func (*GetCaseStatsRequest) Descriptor() ([]byte, []int) {
	return file_case_def_proto_rawDescGZIP(), []int{4}
}

func (x *GetCaseStatsRequest) GetNoCache() bool {
	if x != nil {
		return x.NoCache
	}
	return false
}

type GetCaseStatsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastUpdTime             int64 `protobuf:"varint,1,opt,name=last_upd_time,json=lastUpdTime,proto3" json:"last_upd_time,omitempty"`
	ConfirmedCount          int64 `protobuf:"varint,11,opt,name=confirmed_count,json=confirmedCount,proto3" json:"confirmed_count,omitempty"`
	ConfirmedDiffYesterday  int64 `protobuf:"varint,12,opt,name=confirmed_diff_yesterday,json=confirmedDiffYesterday,proto3" json:"confirmed_diff_yesterday,omitempty"`
	DeathsCount             int64 `protobuf:"varint,21,opt,name=deaths_count,json=deathsCount,proto3" json:"deaths_count,omitempty"`
	DeathsDiffYesterday     int64 `protobuf:"varint,22,opt,name=deaths_diff_yesterday,json=deathsDiffYesterday,proto3" json:"deaths_diff_yesterday,omitempty"`
	RecoveredCount          int64 `protobuf:"varint,31,opt,name=recovered_count,json=recoveredCount,proto3" json:"recovered_count,omitempty"`
	RecoveredDiffYesterday  int64 `protobuf:"varint,32,opt,name=recovered_diff_yesterday,json=recoveredDiffYesterday,proto3" json:"recovered_diff_yesterday,omitempty"`
	TestedCount             int64 `protobuf:"varint,41,opt,name=tested_count,json=testedCount,proto3" json:"tested_count,omitempty"`
	TestedDiffYesterday     int64 `protobuf:"varint,42,opt,name=tested_diff_yesterday,json=testedDiffYesterday,proto3" json:"tested_diff_yesterday,omitempty"`
	InHospitalCount         int64 `protobuf:"varint,51,opt,name=in_hospital_count,json=inHospitalCount,proto3" json:"in_hospital_count,omitempty"`
	InHospitalDiffYesterday int64 `protobuf:"varint,52,opt,name=in_hospital_diff_yesterday,json=inHospitalDiffYesterday,proto3" json:"in_hospital_diff_yesterday,omitempty"`
	InIcuCount              int64 `protobuf:"varint,61,opt,name=in_icu_count,json=inIcuCount,proto3" json:"in_icu_count,omitempty"`
	InIcuDiffYesterday      int64 `protobuf:"varint,62,opt,name=in_icu_diff_yesterday,json=inIcuDiffYesterday,proto3" json:"in_icu_diff_yesterday,omitempty"`
}

func (x *GetCaseStatsResponse) Reset() {
	*x = GetCaseStatsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_case_def_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCaseStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCaseStatsResponse) ProtoMessage() {}

func (x *GetCaseStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_case_def_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCaseStatsResponse.ProtoReflect.Descriptor instead.
func (*GetCaseStatsResponse) Descriptor() ([]byte, []int) {
	return file_case_def_proto_rawDescGZIP(), []int{5}
}

func (x *GetCaseStatsResponse) GetLastUpdTime() int64 {
	if x != nil {
		return x.LastUpdTime
	}
	return 0
}

func (x *GetCaseStatsResponse) GetConfirmedCount() int64 {
	if x != nil {
		return x.ConfirmedCount
	}
	return 0
}

func (x *GetCaseStatsResponse) GetConfirmedDiffYesterday() int64 {
	if x != nil {
		return x.ConfirmedDiffYesterday
	}
	return 0
}

func (x *GetCaseStatsResponse) GetDeathsCount() int64 {
	if x != nil {
		return x.DeathsCount
	}
	return 0
}

func (x *GetCaseStatsResponse) GetDeathsDiffYesterday() int64 {
	if x != nil {
		return x.DeathsDiffYesterday
	}
	return 0
}

func (x *GetCaseStatsResponse) GetRecoveredCount() int64 {
	if x != nil {
		return x.RecoveredCount
	}
	return 0
}

func (x *GetCaseStatsResponse) GetRecoveredDiffYesterday() int64 {
	if x != nil {
		return x.RecoveredDiffYesterday
	}
	return 0
}

func (x *GetCaseStatsResponse) GetTestedCount() int64 {
	if x != nil {
		return x.TestedCount
	}
	return 0
}

func (x *GetCaseStatsResponse) GetTestedDiffYesterday() int64 {
	if x != nil {
		return x.TestedDiffYesterday
	}
	return 0
}

func (x *GetCaseStatsResponse) GetInHospitalCount() int64 {
	if x != nil {
		return x.InHospitalCount
	}
	return 0
}

func (x *GetCaseStatsResponse) GetInHospitalDiffYesterday() int64 {
	if x != nil {
		return x.InHospitalDiffYesterday
	}
	return 0
}

func (x *GetCaseStatsResponse) GetInIcuCount() int64 {
	if x != nil {
		return x.InIcuCount
	}
	return 0
}

func (x *GetCaseStatsResponse) GetInIcuDiffYesterday() int64 {
	if x != nil {
		return x.InIcuDiffYesterday
	}
	return 0
}

// AddCasesRequest describes request payload for adding cases
type AddCasesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cases []*NewCaseDetail `protobuf:"bytes,1,rep,name=cases,proto3" json:"cases,omitempty"`
}

func (x *AddCasesRequest) Reset() {
	*x = AddCasesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_case_def_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCasesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCasesRequest) ProtoMessage() {}

func (x *AddCasesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_case_def_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCasesRequest.ProtoReflect.Descriptor instead.
func (*AddCasesRequest) Descriptor() ([]byte, []int) {
	return file_case_def_proto_rawDescGZIP(), []int{6}
}

func (x *AddCasesRequest) GetCases() []*NewCaseDetail {
	if x != nil {
		return x.Cases
	}
	return nil
}

// PutCasesRequest describes request payload for updating existing cases
type PutCasesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cases []*ExistingCaseDetail `protobuf:"bytes,1,rep,name=cases,proto3" json:"cases,omitempty"`
}

func (x *PutCasesRequest) Reset() {
	*x = PutCasesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_case_def_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutCasesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutCasesRequest) ProtoMessage() {}

func (x *PutCasesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_case_def_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutCasesRequest.ProtoReflect.Descriptor instead.
func (*PutCasesRequest) Descriptor() ([]byte, []int) {
	return file_case_def_proto_rawDescGZIP(), []int{7}
}

func (x *PutCasesRequest) GetCases() []*ExistingCaseDetail {
	if x != nil {
		return x.Cases
	}
	return nil
}

// DelCasesRequest describes request payload for deleting existing cases
type DelCasesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CaseIds []string `protobuf:"bytes,1,rep,name=case_ids,json=caseIds,proto3" json:"case_ids,omitempty"`
}

func (x *DelCasesRequest) Reset() {
	*x = DelCasesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_case_def_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelCasesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelCasesRequest) ProtoMessage() {}

func (x *DelCasesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_case_def_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelCasesRequest.ProtoReflect.Descriptor instead.
func (*DelCasesRequest) Descriptor() ([]byte, []int) {
	return file_case_def_proto_rawDescGZIP(), []int{8}
}

func (x *DelCasesRequest) GetCaseIds() []string {
	if x != nil {
		return x.CaseIds
	}
	return nil
}

var File_case_def_proto protoreflect.FileDescriptor

var file_case_def_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x63, 0x61, 0x73, 0x65, 0x2e, 0x64, 0x65, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0a, 0x63, 0x6f, 0x76, 0x69, 0x64, 0x31, 0x39, 0x61, 0x70, 0x69, 0x1a, 0x36, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x77, 0x69, 0x74, 0x6b, 0x6f, 0x77,
	0x2f, 0x67, 0x6f, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x6f, 0x72, 0x73, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x0d, 0x67, 0x65, 0x6f, 0x2e, 0x64, 0x65, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xbc, 0x02, 0x0a, 0x12, 0x45, 0x78, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x61,
	0x73, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1f, 0x0a, 0x07, 0x63, 0x61, 0x73, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58,
	0x01, 0x52, 0x06, 0x63, 0x61, 0x73, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x74,
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x0d, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42,
	0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x10, 0x00, 0x52, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x76, 0x69, 0x64, 0x31, 0x39, 0x61, 0x70,
	0x69, 0x2e, 0x43, 0x61, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x09, 0xe2, 0xdf, 0x1f,
	0x05, 0x20, 0x01, 0x88, 0x01, 0x01, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x47, 0x0a,
	0x0a, 0x69, 0x6e, 0x66, 0x65, 0x63, 0x74, 0x5f, 0x73, 0x72, 0x63, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x76, 0x69, 0x64, 0x31, 0x39, 0x61, 0x70, 0x69, 0x2e, 0x49,
	0x6e, 0x66, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x0b,
	0xe2, 0xdf, 0x1f, 0x07, 0x10, 0x00, 0x20, 0x01, 0x88, 0x01, 0x01, 0x52, 0x09, 0x69, 0x6e, 0x66,
	0x65, 0x63, 0x74, 0x53, 0x72, 0x63, 0x12, 0x38, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x76, 0x69, 0x64,
	0x31, 0x39, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x06,
	0xe2, 0xdf, 0x1f, 0x02, 0x20, 0x01, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x96, 0x02, 0x0a, 0x0d, 0x4e, 0x65, 0x77, 0x43, 0x61, 0x73, 0x65, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x2b, 0x0a, 0x0d, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x10, 0x00,
	0x52, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x36,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e,
	0x63, 0x6f, 0x76, 0x69, 0x64, 0x31, 0x39, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x61, 0x73, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x42, 0x09, 0xe2, 0xdf, 0x1f, 0x05, 0x20, 0x01, 0x88, 0x01, 0x01, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x47, 0x0a, 0x0a, 0x69, 0x6e, 0x66, 0x65, 0x63, 0x74,
	0x5f, 0x73, 0x72, 0x63, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x76,
	0x69, 0x64, 0x31, 0x39, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x6e, 0x66, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x0b, 0xe2, 0xdf, 0x1f, 0x07, 0x10, 0x00, 0x20,
	0x01, 0x88, 0x01, 0x01, 0x52, 0x09, 0x69, 0x6e, 0x66, 0x65, 0x63, 0x74, 0x53, 0x72, 0x63, 0x12,
	0x38, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x76, 0x69, 0x64, 0x31, 0x39, 0x61, 0x70, 0x69, 0x2e, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x20, 0x01, 0x52,
	0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xc4, 0x01, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x43, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a,
	0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x63, 0x6f, 0x76, 0x69, 0x64, 0x31, 0x39, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x35, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0e, 0x32,
	0x15, 0x2e, 0x63, 0x6f, 0x76, 0x69, 0x64, 0x31, 0x39, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x61, 0x73,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x60, 0x01, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02,
	0x10, 0x00, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a,
	0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x42,
	0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x10, 0x00, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x22, 0x80, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x43, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x76, 0x69,
	0x64, 0x31, 0x39, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a,
	0x05, 0x63, 0x61, 0x73, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63,
	0x6f, 0x76, 0x69, 0x64, 0x31, 0x39, 0x61, 0x70, 0x69, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x69,
	0x6e, 0x67, 0x43, 0x61, 0x73, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x05, 0x63, 0x61,
	0x73, 0x65, 0x73, 0x22, 0x30, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x43, 0x61, 0x73, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x6f,
	0x5f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x6e, 0x6f,
	0x43, 0x61, 0x63, 0x68, 0x65, 0x22, 0xec, 0x04, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x43, 0x61, 0x73,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22,
	0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x18, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x5f, 0x79, 0x65,
	0x73, 0x74, 0x65, 0x72, 0x64, 0x61, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x16, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x44, 0x69, 0x66, 0x66, 0x59, 0x65, 0x73, 0x74,
	0x65, 0x72, 0x64, 0x61, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x61, 0x74, 0x68, 0x73, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x64, 0x65, 0x61,
	0x74, 0x68, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x64, 0x65, 0x61, 0x74,
	0x68, 0x73, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x5f, 0x79, 0x65, 0x73, 0x74, 0x65, 0x72, 0x64, 0x61,
	0x79, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x64, 0x65, 0x61, 0x74, 0x68, 0x73, 0x44,
	0x69, 0x66, 0x66, 0x59, 0x65, 0x73, 0x74, 0x65, 0x72, 0x64, 0x61, 0x79, 0x12, 0x27, 0x0a, 0x0f,
	0x72, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x1f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x72, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x64,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x18, 0x72, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x65, 0x64, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x5f, 0x79, 0x65, 0x73, 0x74, 0x65, 0x72, 0x64, 0x61,
	0x79, 0x18, 0x20, 0x20, 0x01, 0x28, 0x03, 0x52, 0x16, 0x72, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x65, 0x64, 0x44, 0x69, 0x66, 0x66, 0x59, 0x65, 0x73, 0x74, 0x65, 0x72, 0x64, 0x61, 0x79, 0x12,
	0x21, 0x0a, 0x0c, 0x74, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x29, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x65, 0x73, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x74, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x64, 0x69, 0x66,
	0x66, 0x5f, 0x79, 0x65, 0x73, 0x74, 0x65, 0x72, 0x64, 0x61, 0x79, 0x18, 0x2a, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x13, 0x74, 0x65, 0x73, 0x74, 0x65, 0x64, 0x44, 0x69, 0x66, 0x66, 0x59, 0x65, 0x73,
	0x74, 0x65, 0x72, 0x64, 0x61, 0x79, 0x12, 0x2a, 0x0a, 0x11, 0x69, 0x6e, 0x5f, 0x68, 0x6f, 0x73,
	0x70, 0x69, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x33, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0f, 0x69, 0x6e, 0x48, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x3b, 0x0a, 0x1a, 0x69, 0x6e, 0x5f, 0x68, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61,
	0x6c, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x5f, 0x79, 0x65, 0x73, 0x74, 0x65, 0x72, 0x64, 0x61, 0x79,
	0x18, 0x34, 0x20, 0x01, 0x28, 0x03, 0x52, 0x17, 0x69, 0x6e, 0x48, 0x6f, 0x73, 0x70, 0x69, 0x74,
	0x61, 0x6c, 0x44, 0x69, 0x66, 0x66, 0x59, 0x65, 0x73, 0x74, 0x65, 0x72, 0x64, 0x61, 0x79, 0x12,
	0x20, 0x0a, 0x0c, 0x69, 0x6e, 0x5f, 0x69, 0x63, 0x75, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x3d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x69, 0x6e, 0x49, 0x63, 0x75, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x31, 0x0a, 0x15, 0x69, 0x6e, 0x5f, 0x69, 0x63, 0x75, 0x5f, 0x64, 0x69, 0x66, 0x66,
	0x5f, 0x79, 0x65, 0x73, 0x74, 0x65, 0x72, 0x64, 0x61, 0x79, 0x18, 0x3e, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x12, 0x69, 0x6e, 0x49, 0x63, 0x75, 0x44, 0x69, 0x66, 0x66, 0x59, 0x65, 0x73, 0x74, 0x65,
	0x72, 0x64, 0x61, 0x79, 0x22, 0x4a, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x43, 0x61, 0x73, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x05, 0x63, 0x61, 0x73, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x76, 0x69, 0x64, 0x31, 0x39,
	0x61, 0x70, 0x69, 0x2e, 0x4e, 0x65, 0x77, 0x43, 0x61, 0x73, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x60, 0x01, 0x52, 0x05, 0x63, 0x61, 0x73, 0x65, 0x73,
	0x22, 0x4f, 0x0a, 0x0f, 0x50, 0x75, 0x74, 0x43, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x05, 0x63, 0x61, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x76, 0x69, 0x64, 0x31, 0x39, 0x61, 0x70, 0x69, 0x2e,
	0x45, 0x78, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x61, 0x73, 0x65, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x60, 0x01, 0x52, 0x05, 0x63, 0x61, 0x73, 0x65,
	0x73, 0x22, 0x34, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x43, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x08, 0x63, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x60, 0x01, 0x52, 0x07,
	0x63, 0x61, 0x73, 0x65, 0x49, 0x64, 0x73, 0x2a, 0x6e, 0x0a, 0x09, 0x43, 0x61, 0x73, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x5f, 0x55, 0x4e, 0x41, 0x53, 0x53, 0x49, 0x47,
	0x4e, 0x45, 0x44, 0x5f, 0x43, 0x41, 0x53, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x10, 0x00,
	0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x0b, 0x12, 0x0f, 0x0a,
	0x0b, 0x55, 0x4e, 0x44, 0x49, 0x53, 0x43, 0x4c, 0x4f, 0x53, 0x45, 0x44, 0x10, 0x0c, 0x12, 0x0d,
	0x0a, 0x09, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x52, 0x4d, 0x45, 0x44, 0x10, 0x15, 0x12, 0x0d, 0x0a,
	0x09, 0x52, 0x45, 0x43, 0x4f, 0x56, 0x45, 0x52, 0x45, 0x44, 0x10, 0x16, 0x12, 0x09, 0x0a, 0x05,
	0x44, 0x45, 0x41, 0x54, 0x48, 0x10, 0x17, 0x2a, 0x5e, 0x0a, 0x0f, 0x49, 0x6e, 0x66, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x17, 0x0a, 0x13, 0x5f, 0x55,
	0x4e, 0x41, 0x53, 0x53, 0x49, 0x47, 0x4e, 0x45, 0x44, 0x5f, 0x49, 0x4e, 0x46, 0x5f, 0x53, 0x52,
	0x43, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x4f, 0x4d, 0x45, 0x53, 0x54, 0x49, 0x43, 0x10,
	0x01, 0x12, 0x11, 0x0a, 0x0d, 0x49, 0x4e, 0x54, 0x4c, 0x5f, 0x49, 0x4d, 0x50, 0x4f, 0x52, 0x54,
	0x45, 0x44, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x48, 0x49, 0x50, 0x5f, 0x49, 0x4d, 0x50,
	0x4f, 0x52, 0x54, 0x45, 0x44, 0x10, 0x03, 0x42, 0x35, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x2e, 0x63,
	0x6f, 0x76, 0x69, 0x64, 0x31, 0x39, 0x2e, 0x61, 0x70, 0x69, 0x42, 0x12, 0x43, 0x61, 0x73, 0x65,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01,
	0x5a, 0x0c, 0x2e, 0x3b, 0x63, 0x6f, 0x76, 0x69, 0x64, 0x31, 0x39, 0x61, 0x70, 0x69, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_case_def_proto_rawDescOnce sync.Once
	file_case_def_proto_rawDescData = file_case_def_proto_rawDesc
)

func file_case_def_proto_rawDescGZIP() []byte {
	file_case_def_proto_rawDescOnce.Do(func() {
		file_case_def_proto_rawDescData = protoimpl.X.CompressGZIP(file_case_def_proto_rawDescData)
	})
	return file_case_def_proto_rawDescData
}

var file_case_def_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_case_def_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_case_def_proto_goTypes = []interface{}{
	(CaseState)(0),               // 0: covid19api.CaseState
	(InfectionSource)(0),         // 1: covid19api.InfectionSource
	(*ExistingCaseDetail)(nil),   // 2: covid19api.ExistingCaseDetail
	(*NewCaseDetail)(nil),        // 3: covid19api.NewCaseDetail
	(*GetCasesRequest)(nil),      // 4: covid19api.GetCasesRequest
	(*GetCasesResponse)(nil),     // 5: covid19api.GetCasesResponse
	(*GetCaseStatsRequest)(nil),  // 6: covid19api.GetCaseStatsRequest
	(*GetCaseStatsResponse)(nil), // 7: covid19api.GetCaseStatsResponse
	(*AddCasesRequest)(nil),      // 8: covid19api.AddCasesRequest
	(*PutCasesRequest)(nil),      // 9: covid19api.PutCasesRequest
	(*DelCasesRequest)(nil),      // 10: covid19api.DelCasesRequest
	(*Location)(nil),             // 11: covid19api.Location
	(*Pagination)(nil),           // 12: covid19api.Pagination
}
var file_case_def_proto_depIdxs = []int32{
	0,  // 0: covid19api.ExistingCaseDetail.state:type_name -> covid19api.CaseState
	1,  // 1: covid19api.ExistingCaseDetail.infect_src:type_name -> covid19api.InfectionSource
	11, // 2: covid19api.ExistingCaseDetail.location:type_name -> covid19api.Location
	0,  // 3: covid19api.NewCaseDetail.state:type_name -> covid19api.CaseState
	1,  // 4: covid19api.NewCaseDetail.infect_src:type_name -> covid19api.InfectionSource
	11, // 5: covid19api.NewCaseDetail.location:type_name -> covid19api.Location
	11, // 6: covid19api.GetCasesRequest.location:type_name -> covid19api.Location
	0,  // 7: covid19api.GetCasesRequest.states:type_name -> covid19api.CaseState
	12, // 8: covid19api.GetCasesResponse.pagination:type_name -> covid19api.Pagination
	2,  // 9: covid19api.GetCasesResponse.cases:type_name -> covid19api.ExistingCaseDetail
	3,  // 10: covid19api.AddCasesRequest.cases:type_name -> covid19api.NewCaseDetail
	2,  // 11: covid19api.PutCasesRequest.cases:type_name -> covid19api.ExistingCaseDetail
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_case_def_proto_init() }
func file_case_def_proto_init() {
	if File_case_def_proto != nil {
		return
	}
	file_common_proto_init()
	file_geo_def_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_case_def_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistingCaseDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_case_def_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewCaseDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_case_def_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCasesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_case_def_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCasesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_case_def_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCaseStatsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_case_def_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCaseStatsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_case_def_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCasesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_case_def_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutCasesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_case_def_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelCasesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_case_def_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_case_def_proto_goTypes,
		DependencyIndexes: file_case_def_proto_depIdxs,
		EnumInfos:         file_case_def_proto_enumTypes,
		MessageInfos:      file_case_def_proto_msgTypes,
	}.Build()
	File_case_def_proto = out.File
	file_case_def_proto_rawDesc = nil
	file_case_def_proto_goTypes = nil
	file_case_def_proto_depIdxs = nil
}
